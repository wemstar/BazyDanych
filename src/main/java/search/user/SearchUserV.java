package search.user;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import commons.Commons;
import commons.models.DeckListTableModel;
import commons.models.UserListTableModel;
import entity.DeckEntity;
import entity.UserEntity;
import org.springframework.stereotype.Controller;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;

/**
 * Created by wemstar on 27.12.13.
 */
public class SearchUserV {
    private JTextField tfNick;
    private JComboBox cbRole;

    private JButton bSearch;
    private JTable tSearchResult;
    private JPanel mainPanel;
    private SearchUserC controller;
    private SearchUserM model;


    public SearchUserV() {
        bSearch.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                controller.searchUser();
            }
        });
        tSearchResult.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent me) {

                if (me.getClickCount() == 2) {
                    JTable table = (JTable) me.getSource();
                    Point p = me.getPoint();
                    int row = table.rowAtPoint(p);
                    UserEntity entity = ((UserListTableModel) (table.getModel())).getRowAt(row);
                    controller.userDetail(entity);
                }
            }
        });
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }


    public SearchUserC getController() {
        return controller;
    }

    public void setController(SearchUserC controller) {
        this.controller = controller;
    }

    public void initializeComponents() {
        cbRole.setModel(new DefaultComboBoxModel(Commons.roleList.toArray()));
        tSearchResult.setModel(new UserListTableModel());

    }

    public void setModel(SearchUserM model) {
        this.model = model;
    }

    public SearchUserM getModel() {
        return model;
    }

    public void setNick(String nick) {
        tfNick.setText(nick);
    }

    public String getNick() {
        return tfNick.getText();
    }

    public void setRole(String role) {
        cbRole.setSelectedItem(role);
    }

    public String getRole() {
        return (String) cbRole.getSelectedItem();
    }

    public void setUsersList(List<UserEntity> usersList) {
        ((UserListTableModel) (tSearchResult.getModel())).setUserList(usersList);
        tSearchResult.updateUI();
    }

    public List<UserEntity> getUsersList() {
        return ((UserListTableModel) (tSearchResult.getModel())).getUserList();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
        tfNick = new JTextField();
        mainPanel.add(tfNick, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        cbRole = new JComboBox();
        mainPanel.add(cbRole, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Ncik");
        mainPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Rola");
        mainPanel.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        mainPanel.add(scrollPane1, new GridConstraints(0, 2, 3, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        tSearchResult = new JTable();
        scrollPane1.setViewportView(tSearchResult);
        bSearch = new JButton();
        bSearch.setText("Szukaj");
        mainPanel.add(bSearch, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
