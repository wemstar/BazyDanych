package search.deck;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import commons.Commons;
import commons.models.CardListTableModel;
import commons.models.DeckListTableModel;
import entity.CardEntity;
import entity.DeckEntity;
import entity.RaceEntity;
import entity.UserEntity;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;

/**
 * Created by wemstar on 20.12.13.
 */
public class SearchDeckV {
    private JTable tSearchResult;
    private JTextField tfName;
    private JComboBox cbRace;
    private JComboBox cbUser;
    private JButton bSearch;
    private JPanel mainPanel;
    private SearchDeckM model;
    private SearchDeckC controller;

    public SearchDeckV() {
        bSearch.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                controller.searchDeck();
            }
        });
        tSearchResult.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent me) {

                if (me.getClickCount() == 2) {
                    JTable table = (JTable) me.getSource();
                    Point p = me.getPoint();
                    int row = table.rowAtPoint(p);
                    DeckEntity entity = ((DeckListTableModel) (table.getModel())).getRowAt(row);
                    controller.deckDetail(entity);
                }
            }
        });
    }

    public SearchDeckC getController() {
        return controller;
    }

    public void setController(SearchDeckC controller) {
        this.controller = controller;
    }

    public SearchDeckM getModel() {
        return model;
    }

    public void setModel(SearchDeckM model) {
        this.model = model;
    }

    public String getName() {
        return tfName.getText();
    }

    public void setName(String name) {
        tfName.setText(name);
    }

    public RaceEntity getRace() {
        return (RaceEntity) cbRace.getSelectedItem();
    }

    public void setRace(RaceEntity race) {
        cbRace.setSelectedItem(race);
    }


    public UserEntity getUser() {
        return (UserEntity) cbUser.getSelectedItem();
    }

    public void setDeckList(List<DeckEntity> deckList) {
        ((DeckListTableModel) (tSearchResult.getModel())).setDeckList(deckList);
        tSearchResult.updateUI();
    }

    public void initializeComponents() {

        cbRace.setModel(new DefaultComboBoxModel(Commons.raceList.toArray()));
        cbUser.setModel(new DefaultComboBoxModel(Commons.userList.toArray()));
        tSearchResult.setModel(new DeckListTableModel());


    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(4, 3, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Nazwa");
        mainPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        tfName = new JTextField();
        mainPanel.add(tfName, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        cbRace = new JComboBox();
        mainPanel.add(cbRace, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Rasa");
        mainPanel.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cbUser = new JComboBox();
        mainPanel.add(cbUser, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("UÅ¼ytkownik");
        mainPanel.add(label3, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        bSearch = new JButton();
        bSearch.setText("Szukaj");
        mainPanel.add(bSearch, new GridConstraints(3, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        mainPanel.add(scrollPane1, new GridConstraints(0, 2, 4, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        tSearchResult = new JTable();
        scrollPane1.setViewportView(tSearchResult);
        label1.setLabelFor(tfName);
        label2.setLabelFor(cbRace);
        label3.setLabelFor(cbUser);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
